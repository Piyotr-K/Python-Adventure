=============================================
Backup code just incase
=============================================

UI.py
def mainMenu(self) -> None:
    bg_color = "darkgrey"
    self.set_row_col(self.currFrame, "1x1")
    self.topFrame = tk.Frame(master=self.currFrame, bg=bg_color)
    self.title : tk.Label = tk.Label(master = self.topFrame,
                                    text=MainUI.gameTitle,
                                    font=("Consolas", 20),
                                    bg=bg_color)
    self.btn_play : tk.Button = tk.Button(master = self.topFrame,
                                    text="Play Now!",
                                    font=("Consolas", 16),
                                    borderwidth=5,
                                    command=lambda : self.change_screens(self.currFrame))

    self.btn_quit : tk.Button = tk.Button(master = self.topFrame,
                                    text="no :(",
                                    font=("Consolas", 16),
                                    borderwidth=5,
                                    command=self.exit)
    
    self.topFrame.grid(row=0,column=0, sticky="nesw")
    self.topFrame.grid_propagate(False)

    self.title.place(relx=.5,rely=.4,anchor="c")

    self.btn_play.place(relx=.5,rely=.5,anchor="c")

    self.btn_quit.place(relx=.5,rely=.8,anchor="c")

def combatMenu(self, _w : tk.Frame) -> None:
    self.set_row_col(_w, "2x1")
    self.topFrame = tk.Frame(master=_w,
                            bg="darkgrey")
    self.topFrame.grid(row=0, column=0,sticky="nesw")
    self.topFrame.grid_propagate(False)

    self.botFrame = tk.Frame(master=_w,
                            bg="lightgrey")
    self.botFrame.grid(row=1, column=0,sticky="nesw")
    self.botFrame.grid_propagate(False)

    self.addImgL(0.1, "./res/imgs/zux.png")

    self.createMenu1()

    # self.canvas_w = self.width - 20
    # self.canvas_h = self.height // 2
    # self.canvas = tk.Canvas(master=self.topFrame, width=self.canvas_w, height=self.canvas_h, background="gray")

    # self.addImgC(self.canvas_w // 2, self.canvas_h // 2, 1, tk.CENTER, './res/imgs/zux.png')

    
def addImgL(self, _size : int, _img : str) -> None:
    tmp_img = Image.open(_img)
    c_w = int(tmp_img.width * _size)
    c_h = int(tmp_img.height * _size)
    resized = tmp_img.resize((c_w, c_h),  Image.ANTIALIAS)
    self.img = ImageTk.PhotoImage(resized)
    self.lbl = tk.Label(master=self.topFrame, image=self.img)
    self.lbl.place(relx=.5, rely=.5, anchor="c")

def createMenu1(self) -> bool:
    self.btns : List[tk.Button] = []
    if self.btns != []:
        for x in self.btns:
            x.grid_forget()
        self.btns.clear()
    
    # set botFrame to a 2x2 grid
    self.set_row_col(self.botFrame, "2x2")

    options = ["Attack", "Defend", "Bag", "Run"]
    btn_font = ("Consolas", 15)
    
    # Need the lambda default keyword expressions
    for x in range(4):
        self.btns.append(
            tk.Button(master = self.botFrame,
            text=options[x],
            font=btn_font,
            command = lambda _x=x: self.game.eval_btn(_x)))

    p_x = 40
    p_y = 20
    
    self.btns[0].grid(row=0,column=0, sticky="nesw", padx=p_x, pady=p_y)
    self.btns[1].grid(row=0, column=1, sticky="nesw", padx=p_x, pady=p_y)
    self.btns[2].grid(row=1, column=0, sticky="nesw", padx=p_x, pady=p_y)
    self.btns[3].grid(row=1, column=1, sticky="nesw", padx=p_x, pady=p_y)